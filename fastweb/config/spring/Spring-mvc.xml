<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
	<context:component-scan base-package="com.maple.fastweb" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
		<context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice" />
	</context:component-scan>

	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>
		<property name="validationMessageSource" ref="messageSource"/>
	</bean>

	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="useCodeAsDefaultMessage" value="false"/>
		<property name="defaultEncoding" value="UTF-8"/>
	</bean>

	<bean id="stringHttpMessageConverter"
		  class="org.springframework.http.converter.StringHttpMessageConverter">
		<constructor-arg value="UTF-8" index="0"></constructor-arg>
		<!--避免出现乱码 -->
		<property name="supportedMediaTypes">
			<list>
				<value>text/plain;charset=UTF-8</value>
				<value>application/json;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	<bean id="fastJsonHttpMessageConverter"
		  class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">

		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value><!-- 避免IE出现下载JSON文件的情况 -->
				<value>application/json;charset=UTF-8</value>

			</list>
		</property>


	</bean>
	<aop:config proxy-target-class="true"/>

	<mvc:annotation-driven validator="validator" >
		<mvc:message-converters register-defaults="true">
			<ref bean="stringHttpMessageConverter"  />
			<ref bean="fastJsonHttpMessageConverter" />


		</mvc:message-converters>
	</mvc:annotation-driven>

	<mvc:default-servlet-handler />

	<mvc:resources mapping="/easyui/**" location="/WEB-INF/easyui/" />


	<!--<bean class="com.maple.swagger.SwaggerConfig"/>-->
	<!-- 配置拦截器 -->
	<!-- <mvc:interceptors> 使用bean定义一个Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求 
		<bean class="com.host.app.web.interceptor.AllInterceptor"/> <mvc:interceptor> 
		<mvc:mapping path="/admin/*.do"/> 定义在mvc:interceptor下面的表示是对特定的请求才进行拦截的 <mvc:exclude-mapping 
		path="/admin/login.do"/> <mvc:exclude-mapping path="/admin/showArticle.do"/> 
		<bean class="com.k6.interceptor.AuthorityInterceptor"/> </mvc:interceptor> 
		<mvc:interceptor> <mvc:mapping path="/*/*.do"/> 定义在mvc:interceptor下面的表示是对特定的请求才进行拦截的 
		<mvc:exclude-mapping path="/user/regist.do"/> <mvc:exclude-mapping path="/user/login.do"/> 
		<mvc:exclude-mapping path="/user/getSmsCode.do"/> <mvc:exclude-mapping path="/user/resetPwd.do"/> 
		<mvc:exclude-mapping path="/user/loginWX.do"/> <mvc:exclude-mapping path="/user/loginQQ.do"/> 
		<mvc:exclude-mapping path="/*/*.do"/> <bean class="com.k6.interceptor.TokenIntercepter"/> 
		</mvc:interceptor> </mvc:interceptors> -->
	<!-- 对模型视图名称的解析，即在模型视图名称添加前后缀 -->
	<mvc:interceptors>
	<mvc:interceptor>
		<mvc:mapping path="/**" />
		<mvc:exclude-mapping path="/api-docs"/>
		<!--<bean class="com.maple.intercepter.TokenIntercepter" />-->
		<bean class="com.maple.fastweb.interceptor.JsonInterceptor"/>
	</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/admin/**" />
			<mvc:exclude-mapping path="/user/**" />
			<bean class="com.maple.fastweb.interceptor.ValidateInterceptor" />
		</mvc:interceptor>
		<!--<mvc:interceptor>
			<mvc:mapping path="/admin/**" />
			<mvc:exclude-mapping path="/user/**" />
			<bean class="com.maple.fastweb.interceptor.TokenInterceptor" />
		</mvc:interceptor>-->

</mvc:interceptors>
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		p:prefix="/WEB-INF/views/" p:suffix=".jsp" p:order="0" />

	<!-- FreeMarker环境配置 -->
	<!--<bean id="freemarkerConfig"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		&lt;!&ndash; freemarker模板位置 &ndash;&gt;
		<property name="templateLoaderPath" value="/WEB-INF/freemaker/" />
		<property name="freemarkerSettings">
			<props>
				<prop key="template_update_delay">0</prop>
				<prop key="default_encoding">UTF-8</prop>
				<prop key="number_format">0.##########</prop>
				<prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
				<prop key="classic_compatible">true</prop>
				<prop key="template_exception_handler">ignore</prop>
			</props>
		</property>

	</bean>-->

	<!-- FreeMarker视图解析 -->
	<!--<bean id="freeMarkerViewResolver"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="cache" value="true" />
		<property name="prefix" value="" />
		<property name="suffix" value=".ftl" />
		<property name="order" value="1" />
	</bean>-->

	<!-- 注册spring web mvc中处理上传事件的组件CommonsMultipartResolver, 而具体怎样处理上传文件，则是由导入的包common-upload.jar和common-io.jar去处理 -->
	<!--<bean id="multipartResolver"-->
		<!--class="org.springframework.web.multipart.commons.CommonsMultipartResolver">-->
		<!--<property name="maxUploadSize" value="169198717"></property>-->
		<!--<property name="resolveLazily" value="true"></property>-->
	<!--</bean>-->

</beans>
